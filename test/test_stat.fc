use * from unittest;

include( "character.chr" );

const I10 = 10;

function test_if():void
{
	var override = 0;
	if( 1 ){
		var override = 1;
		assert_equal( override, 1, "then scope" );
	}else{
		var override = 2;
	}

	if( 0 ){
		var override = 1;
	}else{
		var override = 2;
		assert_equal( override, 2, "else scope" );
	}

	var w0:int16 = 0;
	if( w0 ) assert_equal( 0, 1, "if 0:int16" );
	
	var w1:int16 = 1;
	if( w1 ) ; else assert_equal( 0, 1, "if 1:int16" );

	var w256:int16 = 256;
	if( w256 );	else assert_equal( 0, 1, "if 256:int16" );

	var i:int;
	if( 0 ) i = 0; else if( 1 ) i = 1; else i = 2;
	assert_equal( i, 1, "if else else" );
}

function test_loop():void
{
	var i = 0;
	loop() if( (i+=1) == 3 ) break;
	assert_equal( i, 3, 'break');
	
	i = 0;
	loop(){
		i += 1;
		if( i < 3 ){ continue; }
		break;
	}
	assert_equal( i, 3, 'continue');

	var override = 0;
	loop(){
		var override = 1;
		assert_equal( override, 1, "scope" );
		break;
	}
}

function test_for():void
{
	var i = 0;
	var n = 0;
	var override = 0;
	for( i, 0, I10 ){
		var override = 1;
		assert_equal( override, 1, "scope" );
		n += i;
	}
	assert_equal(i,10,'i');
	assert_equal(n,45,'n');
}

function test_switch():void
{
	var i:int;
	var sum = 0;
	for( i, 0, 6 ){
		switch( i ){
		case 1,2,3:
			sum += i;
		case 4:
			sum += 10;
		default:
			sum += 20;
		}
	}
	assert_equal( 20+1+2+3+10+20, sum, "switch" );
}

function main():void
{
	unittest_run_tests();
}
